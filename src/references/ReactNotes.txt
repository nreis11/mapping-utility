- Calculations should be done in the render method
- Event listeners have to be on actual HTML elements (not JSX)

If no value is sent for expected props, you can set defaults like so:
Button.defaultProps = {text: "I am a button"};

Any time that you call this.setState(), this.setState() AUTOMATICALLY calls .render() as soon as the state has changed.

In React, if you write a style value as a number, then the unit "px" is assumed.

Stateless components are like anonymous functions. Make sure to send in props as arg.

A good rule of thumb is that elements inside the map() call need keys.

In React, when you give an <input /> a value attribute, then something strange happens: the <input /> BECOMES controlled. It stops using its internal storage. This is a more 'React' way of doing things.

Container component is often responsible for fetching data, API calls (see componentDidMount() lifecycle method) and so on. You should keep this in one place to avoid side-effects in presentational components. Those should be as dumb as possible about everything other than displaying the data.

There are three mounting lifecycle methods:

componentWillMount
render
componentDidMount

componentWillMount does NOT get called, because mounting lifecycle events only execute the first time that a component renders.

There are five updating lifecycle methods:

componentWillReceiveProps
shouldComponentUpdate
componentWillUpdate
render
componentDidUpdate

To add eslint support:
npm install --save-dev eslint-config-react-app babel-eslint@^7.2.3 eslint@^4.1.1 eslint-plugin-flowtype@^2.34.1 eslint-plugin-import@^2.6.0 eslint-plugin-jsx-a11y@^5.1.1 eslint-plugin-react@^7.1.0

Then change .eslintrc file to { extends: "react-app"}

To tidy up JS code:
Install JsPrettier

TESTING
For Enzyme:
- When debugging, use .debug() on obj to see stringed version
    const modal = wrapper.find("Modal");
    // console.log(modal.debug());


To make a copy of an array before setting state, use .slice()

A controlled component is like how a parent decides what a baby is going to wear. The baby
never decides what it's wearing.

You can separate child props via index i.e. props.children[0]

Features to add
Authentication
Auto save
Yaml import
Gitlab
Hosting
Documentation

// Index.HTML

<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1,shrink-to-fit=no"><meta name="theme-color" content="#000000"><link rel="manifest" href="/mapping//manifest.json"><link rel="shortcut icon" href="/mapping/favicon.ico"><title>Mapping Utility</title><link href="/mapping/static/css/main.6783a700.css" rel="stylesheet"></head><body><noscript>You need to enable JavaScript to run this app.</noscript><div id="root"></div><script type="text/javascript" src="/mapping/static/js/main.81892f9d.js"></script></body></html>

2019-11-05 Update
Proposed Changes
- When getting mapping, grab entire node (id and label)
- OLD: {"id":"eqAF-BDS","title":"Badakhshan","parent":"eqAF","mapping":["230","230~~635","230~~635~~3073"]}
- NEW: {"id":"eqAF-BDS","title":"Badakhshan","parent":"eqAF","mapping":[{"id": "230", "title": "Asia},{"id": "230|635", "title": "Tajikistan"},{"id": "230|635|3073", "title": "Gorno-Badakhshan"}]}

Benefits
- When exporting, all information is available to export